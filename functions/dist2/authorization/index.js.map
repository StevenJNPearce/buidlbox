{"version":3,"sources":["../../src/authorization/index.js"],"names":["validateFirebaseIdToken","console","log","req","headers","authorization","startsWith","cookies","__session","error","res","status","send","split","admin","auth","verifyIdToken","idToken","then","decodedIdToken","user","next","catch"],"mappings":"oEAAO,GAAMA,yDAA0B,eAAoB,CAGzD,GAFAC,QAAQC,GAAR,CAAY,uDAAZ,CAEA,CAAI,CAAC,CAACC,EAAIC,OAAJ,CAAYC,aAAb,EAA8B,CAACF,EAAIC,OAAJ,CAAYC,aAAZ,CAA0BC,UAA1B,CAAqC,SAArC,CAAhC,GACA,CAACH,EAAII,OAAJ,CAAYC,SADjB,CAOE,MALAP,SAAQQ,KAAR,CAAc,gFAAd,CACI,8EADJ,CAEI,2CAFJ,CAGI,qCAHJ,CAKA,KADAC,GAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB,CACA,CAGF,GAAI,EAAJ,CACIT,EAAIC,OAAJ,CAAYC,aAAZ,EAA6BF,EAAIC,OAAJ,CAAYC,aAAZ,CAA0BC,UAA1B,CAAqC,SAArC,CAdwB,EAevDL,QAAQC,GAAR,CAAY,8BAAZ,CAfuD,CAiBvD,EAAUC,EAAIC,OAAJ,CAAYC,aAAZ,CAA0BQ,KAA1B,CAAgC,SAAhC,EAA2C,CAA3C,CAjB6C,GAmBvDZ,QAAQC,GAAR,CAAY,0BAAZ,CAnBuD,CAqBvD,EAAUC,EAAII,OAAJ,CAAYC,SArBiC,EAuBzDM,MAAMC,IAAN,GAAaC,aAAb,CAA2BC,CAA3B,EAAoCC,IAApC,CAAyC,WAAkB,CACzDjB,QAAQC,GAAR,CAAY,4BAAZ,CAA0CiB,CAA1C,CADyD,CAEzDhB,EAAIiB,IAAJ,CAAWD,CAF8C,CAGzDE,GACD,CAJD,EAIGC,KAJH,CAIS,WAAS,CAChBrB,QAAQQ,KAAR,CAAc,0CAAd,CAA0DA,CAA1D,CADgB,CAEhBC,EAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,cAArB,CACD,CAPD,CAQD,CA/BM","file":"index.js","sourcesContent":["export const validateFirebaseIdToken = (req, res, next) => {\n  console.log('Check if request is authorized with Firebase ID token');\n\n  if ((!req.headers.authorization || !req.headers.authorization.startsWith('Bearer ')) &&\n      !req.cookies.__session) {\n    console.error('No Firebase ID token was passed as a Bearer token in the Authorization header.',\n        'Make sure you authorize your request by providing the following HTTP header:',\n        'Authorization: Bearer <Firebase ID Token>',\n        'or by passing a \"__session\" cookie.');\n    res.status(403).send('Unauthorized');\n    return;\n  }\n\n  let idToken;\n  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer ')) {\n    console.log('Found \"Authorization\" header');\n    // Read the ID Token from the Authorization header.\n    idToken = req.headers.authorization.split('Bearer ')[1];\n  } else {\n    console.log('Found \"__session\" cookie');\n    // Read the ID Token from cookie.\n    idToken = req.cookies.__session;\n  }\n  admin.auth().verifyIdToken(idToken).then(decodedIdToken => {\n    console.log('ID Token correctly decoded', decodedIdToken);\n    req.user = decodedIdToken;\n    next();\n  }).catch(error => {\n    console.error('Error while verifying Firebase ID token:', error);\n    res.status(403).send('Unauthorized');\n  });\n};\n\n\n"]}